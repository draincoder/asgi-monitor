name: ci

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Load cached Pre-Commit Dependencies
        id: cached-pre-commit-dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit/
          key: pre-commit-4|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: "3.10"
          allow-python-prereleases: false
          cache: true
          cache-dependency-path: |
            ./pdm.lock

      - name: Install dependencies
        run: pdm install -G:all

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Execute Pre-Commit
        run: pdm run pre-commit run --show-diff-on-failure --color=always --all-files

  test:
    name: "test ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          allow-python-prereleases: false
          cache: true
          cache-dependency-path: |
            ./pdm.lock

      - name: Install dependencies
        run: pdm install -G:all

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PWD" >> $GITHUB_ENV

      - name: Run tests
        run: pdm run pytest tests --cov=asgi_monitor --junitxml=junitxml.xml --cov-report term --cov-report "xml:coverage.xml"; exit ${PIPESTATUS[0]}

      - name: Test coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master') || github.event_name == 'pull_request' && github.base_ref == 'master'
        with:
          pytest-xml-coverage-path: ./coverage.xml
          junitxml-path: ./junitxml.xml
          junitxml-title: ${{ matrix.python-version }}
          unique-id-for-comment: ${{ matrix.python-version }}
          report-only-changed-files: true
          create-new-comment: true
