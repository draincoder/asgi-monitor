[project]
name = "asgi-monitor"
version = "0.5.0"
description = "Quick and easy monitoring setup for ASGI application"
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "treaditup", email = "treaditup@gmail.com"},
]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "structlog>=24.1.0",
    "prometheus-client>=0.20.0",
    "opentelemetry-sdk>=1.23.0",
    "opentelemetry-instrumentation-asgi>=0.44b0",
    "click>=8.1.7",
]

[project.scripts]
asgi-monitor = "asgi_monitor.cli:main"

[project.urls]
"Documentation" = "https://asgi-monitor.readthedocs.io"
"Source" = "https://github.com/draincoder/asgi-monitor"
"Homepage" = "https://github.com/draincoder/asgi-monitor"
"Bug Tracker" = "https://github.com/draincoder/asgi-monitor/issues"

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pdm.dev-dependencies]
lint = [
    "ruff>=0.2.2",
    "mypy>=1.8.0",
    "pre-commit>=3.6.2",
]
test = [
    "pytest>=8.0.2",
    "pytest-asyncio>=0.23.5",
    "pytest-aiohttp>=1.0.5",
    "pytest-cov>=4.1.0",
    "assertpy>=1.1",
    "freezegun>=1.4.0",
    "dirty-equals>=0.7.1.post0",
    "httpx>=0.27.0",
]
asgi = [
    "aiohttp>=3.10.5",
    "uvicorn>=0.27.1",
    "fastapi>=0.110.0",
    "starlette>=0.36.3",
    "litestar>=2.7.1",
]
wsgi = [
    "gunicorn>=21.2.0",
]

[tool.ruff]
line-length = 120
target-version="py310"
src = ["src"]
include = ["src/**.py", "tests/**.py"]
exclude = ["examples/real_world/app/main.py", "docs/**.py"]

lint.select = [
    "ALL",
]

lint.ignore = [
    "ARG",
    "ANN",
    "D",
    "EM101",
    "EM102",
    "PT001",
    "PT023",
    "SIM108",
    "SIM114",
    "TRY003",
    "PLW2901",
    "RET505",
    "ISC001",
    "UP035",
    "COM812",
    "G002"
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["TID252", "PLR2004", "S101", "T201", "SLF001", "PERF203", "S603", "S607"]
"examples/**" = ["T201", "B018", "INP001"]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.isort]
known-first-party = ["src", "tests", "examples"]
no-lines-before = ["local-folder"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 88

[tool.mypy]
packages = ["src", "tests"]
python_version = "3.10"

strict = true
pretty = true
allow_redefinition = true
allow_untyped_calls = true
disallow_any_explicit = false
disallow_any_generics = false
disallow_subclassing_any = false
disallow_untyped_decorators = false
ignore_missing_imports = true
show_column_numbers = true
show_error_context = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "prometheus_client.metrics"
implicit_reexport = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = "ignore::DeprecationWarning"
